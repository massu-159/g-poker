{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "openapi": "3.0.3",
  "info": {
    "title": "ごきぶりポーカー REST API",
    "description": "HTTP API for game management and matchmaking",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.gpoker.app/v1",
      "description": "Production API server"
    },
    {
      "url": "http://localhost:3000/v1", 
      "description": "Development API server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "enum": ["ok"]},
                    "timestamp": {"type": "string", "format": "date-time"},
                    "version": {"type": "string"}
                  },
                  "required": ["status", "timestamp", "version"]
                }
              }
            }
          }
        }
      }
    },
    
    "/games": {
      "post": {
        "summary": "Create a new game",
        "operationId": "createGame", 
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "playerId": {"type": "string", "format": "uuid"},
                  "displayName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20,
                    "pattern": "^[a-zA-Z0-9 ]+$"
                  }
                },
                "required": ["playerId", "displayName"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Game created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gameId": {"type": "string", "format": "uuid"},
                    "status": {"type": "string", "enum": ["waiting_for_players"]},
                    "playersNeeded": {"type": "integer", "enum": [1]},
                    "createdAt": {"type": "string", "format": "date-time"}
                  },
                  "required": ["gameId", "status", "playersNeeded", "createdAt"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/RateLimit"
          }
        }
      }
    },
    
    "/games/{gameId}": {
      "get": {
        "summary": "Get game information",
        "operationId": "getGame",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Game information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gameId": {"type": "string", "format": "uuid"},
                    "status": {
                      "type": "string", 
                      "enum": ["waiting_for_players", "in_progress", "ended", "abandoned"]
                    },
                    "playerCount": {"type": "integer", "minimum": 0, "maximum": 2},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "canJoin": {"type": "boolean"}
                  },
                  "required": ["gameId", "status", "playerCount", "createdAt", "canJoin"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    
    "/matchmaking/find": {
      "post": {
        "summary": "Find or create a game match",
        "operationId": "findMatch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "playerId": {"type": "string", "format": "uuid"},
                  "displayName": {
                    "type": "string",
                    "minLength": 1, 
                    "maxLength": 20,
                    "pattern": "^[a-zA-Z0-9 ]+$"
                  },
                  "maxWaitTime": {
                    "type": "integer",
                    "minimum": 5,
                    "maximum": 300,
                    "default": 60,
                    "description": "Maximum wait time in seconds"
                  }
                },
                "required": ["playerId", "displayName"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Match found immediately", 
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gameId": {"type": "string", "format": "uuid"},
                    "status": {"type": "string", "enum": ["found"]},
                    "websocketUrl": {"type": "string", "format": "uri"},
                    "joinToken": {"type": "string"}
                  },
                  "required": ["gameId", "status", "websocketUrl", "joinToken"]
                }
              }
            }
          },
          "202": {
            "description": "Searching for match",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "matchmakingId": {"type": "string", "format": "uuid"},
                    "status": {"type": "string", "enum": ["searching"]},
                    "estimatedWaitTime": {"type": "integer", "description": "Estimated seconds"},
                    "pollUrl": {"type": "string", "format": "uri"}
                  },
                  "required": ["matchmakingId", "status", "estimatedWaitTime", "pollUrl"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/RateLimit"
          }
        }
      }
    },
    
    "/matchmaking/{matchmakingId}/status": {
      "get": {
        "summary": "Check matchmaking status",
        "operationId": "getMatchmakingStatus",
        "parameters": [
          {
            "name": "matchmakingId", 
            "in": "path",
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Matchmaking status",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {"type": "string", "enum": ["searching"]},
                        "timeRemaining": {"type": "integer"},
                        "playersInQueue": {"type": "integer"}
                      },
                      "required": ["status", "timeRemaining", "playersInQueue"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {"type": "string", "enum": ["found"]},
                        "gameId": {"type": "string", "format": "uuid"},
                        "websocketUrl": {"type": "string", "format": "uri"},
                        "joinToken": {"type": "string"}
                      },
                      "required": ["status", "gameId", "websocketUrl", "joinToken"]
                    },
                    {
                      "type": "object", 
                      "properties": {
                        "status": {"type": "string", "enum": ["timeout"]},
                        "reason": {"type": "string"}
                      },
                      "required": ["status", "reason"]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      
      "delete": {
        "summary": "Cancel matchmaking",
        "operationId": "cancelMatchmaking",
        "parameters": [
          {
            "name": "matchmakingId",
            "in": "path", 
            "required": true,
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "204": {
            "description": "Matchmaking cancelled successfully"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    
    "/games/{gameId}/history": {
      "get": {
        "summary": "Get game history/replay",
        "operationId": "getGameHistory",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true, 
            "schema": {"type": "string", "format": "uuid"}
          }
        ],
        "responses": {
          "200": {
            "description": "Game history with all rounds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gameId": {"type": "string", "format": "uuid"},
                    "finalStatus": {"type": "string", "enum": ["ended", "abandoned"]},
                    "winnerId": {"type": "string", "format": "uuid"},
                    "duration": {"type": "integer", "description": "Game duration in seconds"},
                    "rounds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "roundNumber": {"type": "integer"},
                          "initiatingPlayer": {"type": "string"},
                          "targetPlayer": {"type": "string"},  
                          "claim": {"type": "string", "enum": ["cockroach", "mouse", "bat", "frog"]},
                          "actualCard": {"type": "string", "enum": ["cockroach", "mouse", "bat", "frog"]},
                          "response": {"type": "string", "enum": ["believe", "disbelieve", "pass_back"]},
                          "outcome": {"type": "string"},
                          "timestamp": {"type": "string", "format": "date-time"}
                        },
                        "required": ["roundNumber", "initiatingPlayer", "targetPlayer", "claim", "actualCard", "response", "outcome", "timestamp"]
                      }
                    }
                  },
                  "required": ["gameId", "finalStatus", "duration", "rounds"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "403": {
            "description": "Game still in progress",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {"type": "string"},
          "message": {"type": "string"},
          "details": {"type": "object"}
        },
        "required": ["code", "message"]
      }
    },
    
    "responses": {
      "BadRequest": {
        "description": "Invalid request parameters",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "VALIDATION_ERROR",
              "message": "Invalid display name format",
              "details": {
                "field": "displayName",
                "rule": "pattern"
              }
            }
          }
        }
      },
      
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "NOT_FOUND",
              "message": "Game not found"
            }
          }
        }
      },
      
      "RateLimit": {
        "description": "Rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "RATE_LIMIT_EXCEEDED", 
              "message": "Too many requests",
              "details": {
                "retryAfter": 60
              }
            }
          }
        }
      }
    }
  }
}